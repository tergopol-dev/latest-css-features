@layer normalize, variables, base, layout, components, utilities, overrides;

@import "~normalize.css/normalize.css" layer(normalize);

@layer variables {
  :root {
    --colors-dark: #303846;
    --colors-highlight: #dea242;
  }
}

@layer base {
  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }

  body {
    background-color: var(--colors-dark);
  }

  :is(h1, h2, h3, h4, h5, h6) {
    line-height: 1;
    margin: 0;
  }
}

@layer utilities {
  .container {
    margin: 0 auto;
    max-width: 1200px;
    width: 100%;
  }

  .font-comic-neue {
    font-family: "Comic Neue", sans-serif;
  }

  .font-bold {
    font-weight: bold;
  }

  .font-lg {
    font-size: 6rem;
  }

  .font-xl {
    font-size: 8rem;
  }

  .title-indent {
    text-indent: -6rem;
    padding-left: 6rem;
  }

  .intro {
    margin: 0 auto;
    display: block;
  }
}

@layer layout {
  .layout {
    height: 100lvh;
    display: grid;
    grid-template-rows:
      [main] auto
      [footer] 4rem;
    grid-template-columns:
      [fullbleed-start] 1rem [side-menu] minmax(20rem, calc(100% / 6))
      [main-start] auto [main-end] 1rem [fullbleed-end];
  }

  .layout > * {
    display: grid;
    grid: subgrid / subgrid;
  }

  .header {
    align-items: center;
    grid-area: main / main-start;
    grid-template-rows: auto;
  }

  .side-nav {
    grid-area: main / side-menu;
  }
}

@layer components {
  .header {
    h1 {
      color: var(--colors-highlight);
      line-height: 0.8;

      span {
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      span:first-child {
        background-image: linear-gradient(-45deg, #b15235, #feab3a);
      }

      span:nth-child(2) {
        background-image: linear-gradient(-45deg, #76d08b, #34bb1c);
      }

      span:nth-child(3) {
        background-image: linear-gradient(-45deg, #ebb1ee, #c46aab);
      }
    }
  }
}

@media (prefers-reduced-motion: no-preference) {
  .animate-intro {
    animation: intro infinite 20s ease-out alternate;
  }

  .animate-random-color {
    animation: randomColor 2s infinite ease-in-out;
  }
}

@keyframes randomColor {
  from {
    filter: hue-rotate(0deg);
  }

  to {
    filter: hue-rotate(360deg);
  }
}

@keyframes intro {
  from {
    transform: rotate(0deg) translateX(0) scale(1);
  }

  to {
    transform: rotate(360deg) translateX(100%) scale(0.5);
  }
}
